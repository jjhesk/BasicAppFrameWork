android {
    compileSdkVersion targetSdk
    buildToolsVersion buildTools
    def precompile_file_name = "dllocker-release"
    def configConstants = new Properties()
    def Props = file("applaunch.properties")
    if (Props.exists()) {
        Props.withInputStream {
            stream -> configConstants.load(stream)
        }
    }
    defaultConfig {
        applicationId "com.hkm.dllocker"
        minSdkVersion 17
        targetSdkVersion targetSdk
        versionCode publish_build_number
        versionName publish_version_name
        multiDexEnabled = false
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        applicationVariants.all { variant ->
            variant.outputs.each { output ->
                def date = new Date();
                def formattedDate = date.format('yyyyMMddHHmmss')
                def file_name = "dllock-" + "dw" + "-release"
                def new_file_name = "Tsunami-" + formattedDate + "-v" + defaultConfig.versionName
                output.outputFile = new File(output.outputFile.parent, output.outputFile.name.replace(precompile_file_name, new_file_name))
            }
        }


    }
    signingConfigs {
        sign_default {
            keyAlias 'vdomediadownloadnotication'
            keyPassword 'kmk12345'
            storeFile file('/Users/hesk/Documents/certs/hkm.keystore')
            storePassword 'kmk12345'
        }
        sign_home {
            keyAlias 'vdomediadownloadnotication'
            keyPassword 'kmk12345'
            storeFile file('C:\\1 NTFS\\keystore\\hkm.keystore')
            storePassword 'kmk12345'
        }
    }
    productFlavors {
        publishing_package {
            applicationId "com.hkm.dltstchlien"
            versionName defaultConfig.versionName
            signingConfig signingConfigs.sign_default
            buildConfigField "String", "PARSE_APPLICATION_ID", "\"${configConstants.PARSE_APPLICATION_ID}\""
            buildConfigField "String", "PARSE_CLIENT_KEY", "\"${configConstants.PARSE_CLIENT_KEY}\""
            buildConfigField "String", "DISQUS_API_KEY", "\"${configConstants.DISQUS_API_KEY}\""
            buildConfigField "String", "DISQUS_SECRET", "\"${configConstants.DISQUS_SECRET}\""
            buildConfigField "String", "GOOGLE_TRACKER", "\"${configConstants.GOOGLE_TRACKER}\""
            buildConfigField "String", "DFP_INTER_ID", "\"${configConstants.DFP_INTER_ID}\""
            buildConfigField "String", "DFP_LIST_UNIT_ID", "\"${configConstants.DFP_LIST_UNIT_ID}\""
            buildConfigField "String", "CUSTOM_MENU", "\"${configConstants.CUSTOM_MENU}\""
            buildConfigField "String", "DFP_BANNER_UNIT_ID", "\"${configConstants.DFP_BANNER_UNIT_ID}\""
        }

        golden_publish {
            applicationId "com.golden.mediacatcher"
            versionName defaultConfig.versionName
            signingConfig signingConfigs.sign_home
        }
    }
    lintOptions {
        disable 'MissingPrefix'
    }
    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }


}